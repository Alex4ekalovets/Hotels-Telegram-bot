"""–ú–æ–¥—É–ª—å –∏–≥—Ä—ã –ì–æ—Ä–æ–¥–∞ (–ø–æ –∫–æ–º–∞–Ω–¥–µ game).

Functions:
    start_game_question:
        –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É
    text_to_markdown_style:
        –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ç–µ–∫—Å—Ç –≤ —Å—Ç–∏–ª—å MarkdownV2
    get_top10_markdownv2:
        –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å –¢–û–ü10 –∏–≥—Ä–æ–∫–æ–≤ –≤ —Å—Ç–∏–ª–µ MarkdownV2
    send_game_answer:
        –û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è game
    get_user_name:
        –ü–æ–ª—É—á–∞–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–≥—Ä–æ–≤–æ–µ –∏–º—è
    change_user_name:
        –ò–∑–º–µ–Ω—è–µ—Ç –∏–≥—Ä–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    select_menu_item:
        –í—ã–±–æ—Ä –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    play_game:
        –ü—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –∏–ª–∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏–≥—Ä—É
    check_players_city:
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–æ—Ä–æ–¥, –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    get_next_city:
        –ü–æ–ª—É—á–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –≥–æ—Ä–æ–¥
    get_last_letter:
        –ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é –±—É–∫–≤—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≥–æ—Ä–æ–¥–∞
"""
from typing import Optional

from telebot.types import CallbackQuery, Message, ReplyKeyboardRemove

from config_data.config import COMMAND_MESSAGES
from database.game_cities import crud
from keyboards.inline.game_menu import game_menu
from keyboards.reply.quit_game import quit_game
from loader import bot
from states.search_data import UserSearchState


def start_game_question(chat_id: int, user_id: int) -> None:
    """–í—ã–≤–æ–¥–∏—Ç –∏–≥—Ä–æ–≤–æ–µ –º–µ–Ω—é."""
    bot.send_message(chat_id, '–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É "–ì–æ—Ä–æ–¥–∞"?', reply_markup=game_menu())
    bot.set_state(user_id, UserSearchState.game_cities, chat_id)


def text_to_markdown_style(text: str) -> str:
    """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ç–µ–∫—Å—Ç –≤ —Å—Ç–∏–ª—å MarkdownV2."""
    markdown_text = []
    for letter in text:
        if letter in {"_", "*", "[", "]", "(", ")", "~", "`", ">", "#", "+", "-", "=", "|", "{", "}", ".", "!"}:
            letter = "\\" + letter
        markdown_text.append(letter)
    return "".join(markdown_text)


def get_top10_markdownv2(user_id: int) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–æ–ø 10 –∏–≥—Ä–æ–∫–æ–≤."""
    top_players, current_player, current_player_place = crud.get_top10_info(player_id=user_id)
    top_10_text = ["–¢–û–ü 10 –õ–£–ß–®–ò–• –ò–ì–†–û–ö–û–í\n"]
    max_name_size = 19
    places = ["ü•á", "ü•à", "ü•â", "4Ô∏è‚É£", "5Ô∏è‚É£", "6Ô∏è‚É£", "7Ô∏è‚É£", "8Ô∏è‚É£", "9Ô∏è‚É£", "üîü"]
    for player_place, player in enumerate(top_players):
        separator = "üëâ" if player.player_id == user_id else "  "
        spaces = " " * (max_name_size + 1 - len(player.nickname))
        top_10_text.append(f"`{places[player_place]}{separator}{player.nickname}{spaces}{str(player.max_scores)}\n`")
    if current_player_place > 10:
        place = str(current_player_place)
        spaces = " " * (max_name_size + 3 - len(current_player.nickname) - len(place))
        empty_string = text_to_markdown_style("...\n")
        top_10_text.append(f"{empty_string}"
                           f"`{place}üëâ{current_player.nickname}{spaces}{str(current_player.max_scores)}\n`")
    return "".join(top_10_text)


@bot.message_handler(commands=["game"])
def send_game_answer(message: Message) -> None:
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–≥—Ä–æ–≤–æ–µ –∏–º—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –∏–ª–∏ –≤—ã–≤–æ–¥–∏—Ç –∏–≥—Ä–æ–≤–æ–µ –º–µ–Ω—é."""
    if crud.get_player(player_id=message.from_user.id):
        start_game_question(chat_id=message.chat.id, user_id=message.from_user.id)
    else:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–≥—Ä–æ–≤–æ–µ –∏–º—è:")
        bot.set_state(message.from_user.id, UserSearchState.game_name, message.chat.id)


@bot.message_handler(func=lambda message: message.text not in COMMAND_MESSAGES, state=UserSearchState.game_name)
def get_user_name(message: Message) -> None:
    """–°–æ–∑–¥–∞–µ—Ç –∏–≥—Ä–æ–∫–∞ –≤ –ë–î –∏ –≤—ã–≤–æ–¥–∏—Ç –∏–≥—Ä–æ–≤–æ–µ –º–µ–Ω—é."""
    max_player_name = 19
    player_name = (
        message.text[0: max_player_name - 3] + "..." if len(message.text) > max_player_name else message.text
    )
    crud.create_new_player(player_id=message.from_user.id, nickname=text_to_markdown_style(player_name))
    start_game_question(chat_id=message.chat.id, user_id=message.from_user.id)


@bot.message_handler(func=lambda message: message.text not in COMMAND_MESSAGES, state=UserSearchState.game_change_name)
def change_user_name(message: Message) -> None:
    """–ò–∑–º–µ–Ω—è–µ—Ç –∏–≥—Ä–æ–≤–æ–µ –∏–º—è."""
    crud.change_player_name(player_id=message.from_user.id, nickname=message.text)
    start_game_question(chat_id=message.chat.id, user_id=message.from_user.id)


@bot.callback_query_handler(func=lambda call: True, state=UserSearchState.game_cities)
def select_menu_item(call: CallbackQuery) -> None:
    """–û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø—É–Ω–∫—Ç–∞ –∏–≥—Ä–æ–≤–æ–≥–æ –º–µ–Ω—é."""
    if call.data == "start":
        bot.send_message(call.message.chat.id, "–í—ã –Ω–∞—á–∏–Ω–∞–µ—Ç–µ. –í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥", reply_markup=quit_game())
        bot.set_state(call.from_user.id, UserSearchState.game_cities_start, call.message.chat.id)
    elif call.data == "change_name":
        bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–≥—Ä–æ–≤–æ–µ –∏–º—è:")
        bot.set_state(call.from_user.id, UserSearchState.game_change_name, call.message.chat.id)
    elif call.data == "top":
        bot.send_message(call.message.chat.id, get_top10_markdownv2(call.from_user.id), parse_mode="MarkdownV2")


@bot.message_handler(
    func=lambda message: message.text not in COMMAND_MESSAGES, state=UserSearchState.game_cities_start
)
def play_game(message: Message) -> None:
    """–ü—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –∏–≥—Ä—É —Å –≤—ã–≤–æ–¥–æ–º –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞."""
    if message.text == "üè≥Ô∏è–°–¥–∞—é—Å—å":
        scores = crud.save_max_player_scores(player_id=message.from_user.id)
        bot.send_message(message.chat.id, f"–í—ã –Ω–∞–±—Ä–∞–ª–∏ {scores} –æ—á–∫–æ–≤", reply_markup=ReplyKeyboardRemove())
        crud.delete_played_cities_from_db(player_id=message.from_user.id)
        bot.delete_state(message.from_user.id, message.chat.id)
    else:
        bot.send_message(
            message.chat.id,
            check_players_city(message.from_user.id, message.text),
            parse_mode="Markdown",
            reply_markup=quit_game(),
        )


def check_players_city(player_id: int, city: str) -> str:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≥–æ—Ä–æ–¥ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –≥–æ—Ä–æ–¥."""
    first_letter = get_last_letter(player_id)
    if city[0] != first_letter and first_letter is not None:
        return f"–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –Ω–∞ –±—É–∫–≤—É {first_letter}"
    elif not crud.find_city_in_db(city=city):
        return "–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    elif crud.find_in_played_cities(player_id=player_id, city=city):
        return "–≠—Ç–æ—Ç –≥–æ—Ä–æ–¥ —É–∂–µ –±—ã–ª"
    else:
        crud.add_played_city_to_db(player_id=player_id, city=city)
        return get_next_city(player_id=player_id)


def get_next_city(player_id: int) -> str:
    """–ü–æ–ª—É—á–∞–µ—Ç –≥–æ—Ä–æ–¥ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –±—É–∫–≤—É –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –∏–∑ –Ω–µ—Å—ã–≥—Ä–∞–Ω–Ω—ã—Ö –∏–ª–∏ —Å–æ–æ–±—â–∞–µ—Ç –æ –ø–æ–±–µ–¥–µ –∏–≥—Ä–æ–∫–∞."""
    first_letter = get_last_letter(player_id=player_id)
    city = crud.get_city_from_db(player_id=player_id, first_letter=first_letter)
    if city:
        last_letter = get_last_letter(player_id=player_id)
        return city + f"–í–∞–º –Ω–∞ {last_letter}"
    else:
        crud.save_max_player_scores(player_id=player_id, win_scores=500)
        crud.delete_played_cities_from_db(player_id=player_id)
        return f"–Ø –±–æ–ª—å—à–µ –Ω–µ –∑–Ω–∞—é –≥–æ—Ä–æ–¥–æ–≤ –Ω–∞ –±—É–∫–≤—É {first_letter}. –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏"


def get_last_letter(player_id: int) -> Optional[str]:
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é –±—É–∫–≤—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≥–æ—Ä–æ–¥–∞."""
    city = crud.get_last_city(player_id)
    if city:
        last_letter = city[-1].upper()
        if last_letter in "–™–¨":
            last_letter = city[-2].upper()
        return last_letter
    return None
